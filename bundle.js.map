{"version":3,"file":"bundle.js","mappings":"mBAGAA,SAASC,iBAAiB,oBAAoB,KAC5C,MAAMC,EAAkBF,SAASG,eAAe,eAC1CC,EAAcJ,SAASG,eAAe,aAE5CD,EAAgBD,iBAAiB,SAAS,KACxC,MACMI,ECWH,SAAqBC,GAC1B,MAAMC,EAAoBD,EAAWE,QAAQ,MAAO,IAC9CC,EAAY,CAChB,CAAEC,KAAM,OAAQC,QAAS,MACzB,CAAED,KAAM,aAAcC,QAAS,WAC/B,CAAED,KAAM,mBAAoBC,QAAS,UACrC,CAAED,KAAM,MAAOC,QAAS,OACxB,CAAED,KAAM,MAAOC,QAAS,QAG1B,IAAK,MAAMN,KAAYI,EACrB,GAAIJ,EAASM,QAAQC,KAAKL,GACxB,OAAOF,EAASK,KAIpB,MAAO,SACT,CD5BqBG,CADEX,EAAgBY,QERhC,SAAyBT,GAC9B,MAAMU,EAAgBf,SAASgB,cAAc,mBAC7C,IAAKD,EAEH,YADAE,QAAQC,MAAM,4BAIEH,EAAcI,iBAAiB,cACvCC,SAASC,IACjBA,EAAKC,UAAUC,OAAO,cAAc,IAGtC,MAAMC,EAAaT,EAAcC,cAAc,SAASX,OACpDmB,EACFA,EAAWF,UAAUG,IAAI,eAEzBR,QAAQS,KAAK,uBAAuBrB,eAExC,CFRIsB,CAAgBtB,GAChBD,EAAYwB,YAAcvB,CAAQ,IAGbL,SAASG,eAAe,mBAChCF,iBAAiB,SAAS,KACvC,MACM4B,ECjBH,SAA4BvB,GACjC,MAAMC,EAAoBD,EAAWE,QAAQ,MAAO,IACpD,IAAKD,EACH,OAAO,EAGT,MAAMuB,EAASC,MAAMC,KAAKzB,GAAmB0B,IAAIC,QAAQC,UACzD,IAAIC,EAAM,EACV,IAAK,IAAIC,EAAI,EAAGA,EAAIP,EAAOQ,OAAQD,IACjC,GAAIA,EAAI,GAAM,EAAG,CACf,MAAME,EAA2B,EAAZT,EAAOO,GAC5BD,GAAOG,EAAe,EAAIA,EAAe,EAAIA,CAC/C,MACEH,GAAON,EAAOO,GAIlB,OAAOD,EAAM,IAAO,CACtB,CDDoBI,CADGtC,EAAgBY,OAIjCV,EAAYwB,YADVC,EACwB,oBAEA,qBAC5B,GACA,G","sources":["webpack://credit-card-validator/./src/js/app.js","webpack://credit-card-validator/./src/js/validators.js","webpack://credit-card-validator/./src/js/widget.js"],"sourcesContent":["import { validateCardNumber, getCardType } from './validators.js';\nimport { displayCardType } from './widget.js';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const cardNumberInput = document.getElementById('card-number');\n  const cardTypeDiv = document.getElementById('card-type');\n\n  cardNumberInput.addEventListener('input', () => {\n    const cardNumber = cardNumberInput.value;\n    const cardType = getCardType(cardNumber);\n    displayCardType(cardType);\n    cardTypeDiv.textContent = cardType;\n  });\n\n  const validateButton = document.getElementById('validate-button');\n  validateButton.addEventListener('click', () => {\n    const cardNumber = cardNumberInput.value;\n    const isValid = validateCardNumber(cardNumber);\n\n    if (isValid) {\n      cardTypeDiv.textContent = 'Valid card number';\n    } else {\n      cardTypeDiv.textContent = 'Invalid card number';\n    }\n  });\n});\n","export function validateCardNumber(cardNumber) {\n  const cleanedCardNumber = cardNumber.replace(/\\D/g, '');\n  if (!cleanedCardNumber) {\n    return false;\n  }\n\n  const digits = Array.from(cleanedCardNumber).map(Number).reverse();\n  let sum = 0;\n  for (let i = 0; i < digits.length; i++) {\n    if (i % 2 === 1) {\n      const doubledDigit = digits[i] * 2;\n      sum += doubledDigit > 9 ? doubledDigit - 9 : doubledDigit;\n    } else {\n      sum += digits[i];\n    }\n  }\n\n  return sum % 10 === 0;\n}\n\nexport function getCardType(cardNumber) {\n  const cleanedCardNumber = cardNumber.replace(/\\D/g, '');\n  const cardTypes = [\n    { type: 'Visa', pattern: /^4/ },\n    { type: 'Mastercard', pattern: /^5[1-5]/ },\n    { type: 'American Express', pattern: /^3[47]/ },\n    { type: 'JCB', pattern: /^35/ },\n    { type: 'MIR', pattern: /^22/ },\n  ];\n\n  for (const cardType of cardTypes) {\n    if (cardType.pattern.test(cleanedCardNumber)) {\n      return cardType.type;\n    }\n  }\n\n  return 'Unknown';\n}\n","export function displayCardType(cardType) {\n  const logoContainer = document.querySelector('.logo-container');\n  if (!logoContainer) {\n    console.error('Logo container not found');\n    return;\n  }\n\n  const cardLogos = logoContainer.querySelectorAll('.card-logo');\n  cardLogos.forEach((logo) => {\n    logo.classList.remove('active-logo');\n  });\n\n  const activeLogo = logoContainer.querySelector(`[alt=\"${cardType}\"]`);\n  if (activeLogo) {\n    activeLogo.classList.add('active-logo');\n  } else {\n    console.warn(`Logo for card type \"${cardType}\" not found`);\n  }\n}\n"],"names":["document","addEventListener","cardNumberInput","getElementById","cardTypeDiv","cardType","cardNumber","cleanedCardNumber","replace","cardTypes","type","pattern","test","getCardType","value","logoContainer","querySelector","console","error","querySelectorAll","forEach","logo","classList","remove","activeLogo","add","warn","displayCardType","textContent","isValid","digits","Array","from","map","Number","reverse","sum","i","length","doubledDigit","validateCardNumber"],"sourceRoot":""}